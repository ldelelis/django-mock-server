version: '3.4'

services:
  admin_app:
    image: ldelelis/mockserver:develop
    restart: always
    command: gunicorn -w4 -b 0.0.0.0:8000 --chdir ./mockserver mockserver.wsgi
    environment:
      - IS_ADMIN_API=true
      - DATABASE_URL=postgres://mockserver:changeme@db:5432/mocks-api
      - DEBUG=True
    volumes:
      - .:/www
      - static_volume:/usr/src/app/mockserver/static
    depends_on:
      - db
    labels:
      traefik.enable: "true"
      traefik.frontend.passHostHeaders: "true"
      traefik.http.services.admin_app.loadbalancer.server.port: "8000"
      traefik.http.routers.admin_app.rule: Host(`localhost`)

  mocks_app:
    image: ldelelis/mockserver:develop
    restart: always
    command: gunicorn -w4 -b 0.0.0.0:8000 --chdir ./mockserver mockserver.wsgi
    environment:
      - DATABASE_URL=postgres://mockserver:changeme@db:5432/mocks-api
      - DEBUG=True
    volumes:
      - .:/www
    depends_on:
      - db
    labels:
      traefik.enable: "true"
      traefik.frontend.passHostHeaders: "true"
      traefik.http.services.mocks_app.loadbalancer.server.port: "8000"
      traefik.http.routers.mocks_app.rule: HostRegexp(`{org:[a-zA-Z0-9]+}.{proj:[a-zA-Z]+}.localhost`)

  tasks:
    image: ldelelis/mockserver:develop
    restart: always
    command: celery worker -A mockserver --workdir mockserver -l info
    environment:
      - CELERY_BROKER_URL=redis://cache:6379/1
      - DEBUG=False
    depends_on:
      - cache

  traefik:
    image: traefik:v2.0
    restart: always
    ports:
      - "8000:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--providers.docker"
    depends_on:
      - admin_app
      - mocks_app

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./conf:/etc/nginx/conf.d
      - static_volume:/www/mockserver/static
    depends_on:
      - traefik
    labels:
      traefik.enable: "true"
      traefik.frontend.passHostHeaders: "true"
      traefik.http.routers.nginx.rule: Host(`localhost`) && PathPrefix(`/static`)

  db:
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_DB=mocks-api
      - POSTGRES_USER=mockserver
      - POSTGRES_PASSWORD=changeme
    volumes:
      - postgres:/var/lib/postgresql/data

  cache:
    image: redis:6
    restart: always

volumes:
  static_volume:
  postgres:
